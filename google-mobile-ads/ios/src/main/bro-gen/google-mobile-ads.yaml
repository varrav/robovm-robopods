#taken obigu fork of robopods 2.2.3-SNAPSHOT (for ads 7.31.0) and pached from console output till 7.34.0
package: org.robovm.pods.google.mobileads
framework: GoogleMobileAds
include: [foundation, uikit, coregraphics, storekit]
clang_args: ['-x', 'objective-c']
headers: [GoogleMobileAds.h]
typedefs:
    
enums:
    GADAdChoicesPosition: {}
    GADErrorCode: {nserror: true, prefix: kGADError}
    GADGender: {}
    GADInAppPurchaseStatus: {}
    GADMBannerAnimationType: {prefix: kGADMBannerAnimationType}
    GADNativeAdImageAdLoaderOptionsOrientation: {}
    GADSearchBorderType: {}
    GADSearchCallButtonColor: {}
        
classes:

    DFPBannerView: # DONE
        properties:
            'validAdSizes':
                name: validAdSizes0
                type: NSArray<NSValue>
                visibility: private
            'enableManualImpressions':
                getter: areManualImpressionsEnabled
                setter: setManualImpressionsEnabled
        methods:
            '-setValidAdSizesWithSizes:':
                exclude: true # deprecated
            '-resize:':
                trim_after_first_colon: true
    DFPBannerViewOptions: {}
    DFPCustomRenderedAd: # DONE
        methods:
            '-finishedRenderingAdView:':
                trim_after_first_colon: true
    DFPInterstitial: {} # DONE
    DFPRequest: # DONE
        properties:
            'categoryExclusions':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '+updateCorrelator':
                exclude: true # deprecated
    GADAdChoicesView: {}
    GADAdLoader: # DONE
        methods:
            '-initWithAdUnitID:rootViewController:adTypes:options:':
                name: init
                parameters:
                    adTypes:
                        type: List<GADAdLoaderAdType>
                        marshaler: GADAdLoaderAdType.AsListMarshaler
                    options:
                        type: NSArray<GADAdLoaderOptions>
            '-loadRequest:':
                trim_after_first_colon: true
    GADAdLoaderOptions: {} # DONE
    GADAdReward: # DONE
        methods:
            '-initWithRewardType:rewardAmount:':
                name: init
    GADAdSize: {} # DONE
    GADAudioVideoManager: {}
    GADBannerView: # DONE
        properties:
            '(hasAutoRefreshed|mediatedAdView)':
                exclude: true # deprecated
        methods:
            '-init.*':
                name: init
            '-loadRequest:':
                trim_after_first_colon: true
    GADCorrelator: {} # DONE
    GADCorrelatorAdLoaderOptions: {} # DONE
    GADCustomEventExtras: # DONE
        methods:
            '-setExtras:forLabel:':
                name: setExtras0
                visibility: private # changed params order
            '-extrasForLabel:':
                name: getExtras
            '-allExtras':
                property: true
    GADCustomEventRequest: # DONE
        properties:
            'userHasLocation':
                name: hasUserLocation
            'userKeywords':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
    GADDebugOptionsViewController: {}
    GADDynamicHeightSearchRequest:
        methods:
            '-setAdvancedOptionValue:forKey:':
                #trim_after_first_colon: true
                name: setAdvancedOption
    GADExtras: {} # DONE
    GADDefaultInAppPurchase: # DONE
        methods:
            '+enableDefaultPurchaseFlowWithDelegate:':
                name: enableDefaultPurchaseFlow
    GADInAppPurchase: # DONE
        methods:
            '-reportPurchaseStatus:':
                trim_after_first_colon: true
    GADInterstitial: # DONE
        properties:
            'adUnitID':
                readonly: true
        methods:
            '-setAdUnitID:':
                exclude: true # deprecated
            '-initWithAdUnitID:':
                name: init
            '-loadRequest:':
                trim_after_first_colon: true
            '-presentFromRootViewController:':
                name: present
    GADMediatedNativeAdNotificationSource: # DONE
        methods:
            '+mediatedNativeAdDidRecordImpression:':
                name: didRecordImpression
            '+mediatedNativeAdDidRecordClick:':
                name: didRecordClick
            '+mediatedNativeAdWillPresentScreen:':
                name: willPresentScreen
            '+mediatedNativeAdWillDismissScreen:':
                name: willDismissScreen
            '+mediatedNativeAdDidDismissScreen:':
                name: didDismissScreen
            '+mediatedNativeAdWillLeaveApplication:':
                name: willLeaveApplication
    GADMediatedUnifiedNativeAdNotificationSource: {}
    GADMediaView: {} # DONE
    GADMobileAds: # DONE
        methods:
            '+sharedInstance':
                property: true
            '-isSDKVersionAtLeastMajor:minor:patch:':
                name: isSDKVersionAtLeast
            '+configureWithApplicationID:':
                name: configure
    GADMultipleAdsAdLoaderOptions: {}
    GADNativeAd: {} # DONE
    GADNativeAdViewAdOptions: {}
    GADNativeAdImage: # DONE
        methods:
            '-init.*':
                name: init
    GADNativeAdImageAdLoaderOptions: # DONE
        properties:
            'disableImageLoading':
                name: imageLoadingDisabled
    GADNativeAppInstallAd: # DONE
        properties:
            'images':
                type: NSArray<GADNativeAdImage>
        methods:
            '-registerAdView:assetViews:':
                #trim_after_first_colon: true
                name: registerAdView
            '-registerAdView:clickableAssetViews:nonclickableAssetViews:':
                #trim_after_first_colon: true
                name: registerAdView

    GADNativeAppInstallAdView: {} # DONE
    GADNativeContentAd: # DONE
        methods:
            '-registerAdView:assetViews:':
                #trim_after_first_colon: true
                name: registerAdView
            '-registerAdView:clickableAssetViews:nonclickableAssetViews:':
                #trim_after_first_colon: true
                name: registerAdView
        
        properties:
            'images':
                type: NSArray<GADNativeAdImage>
    GADNativeContentAdView: {} # DONE
    GADNativeCustomTemplateAd: # DONE
        properties:
            'availableAssetKeys':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '-imageForKey:':
                name: getImage
            '-stringForKey:':
                name: getString
            '-performClickOnAssetWithKey:customClickHandler:':
                name: performClickOnAsset
    GADNativeExpressAdView:
        methods:
            '-initWithAdSize:origin:':
                #trim_after_first_colon: true
                name: init
    GADRewardBasedVideoAd: # DONE
        methods:
            '-loadRequest:withAdUnitID:':
                trim_after_first_colon: true
            '-presentFromRootViewController:':
                name: present
            '+sharedInstance':
                property: true
    GADRequest: # DONE
        skip_def_constructor: true
        properties:
            '(testDevices|keywords)':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '-setBirthdayWithMonth:day:year:':
                exclude: true
            '-registerAdNetworkExtras:':
                trim_after_first_colon: true
            '-adNetworkExtrasFor:':
                name: getAdNetworkExtras
                parameters:
                    aClass:
                        type: 'Class<? extends GADAdNetworkExtras>'
            '-removeAdNetworkExtrasFor:':
                name: removeAdNetworkExtras
                parameters:
                    aClass:
                        type: 'Class<? extends GADAdNetworkExtras>'
            '-setLocationWithLatitude:longitude:accuracy:':
                name: setLocation
            '-setLocationWithDescription:':
                exclude: true # deprecated
            '-tagForChildDirectedTreatment:':
                trim_after_first_colon: true
            '+request':
                name: create
                constructor: true
            '+sdkVersion':
                property: true
    GADRequestError: # DONE
        skip_def_constructor: true
    GADSearchBannerView: {} # DONE
    GADSearchRequest: # DONE
        methods:
            '-setBackgroundGradientFrom:toColor:':
                name: setBackgroundGradient
    GADUnifiedNativeAd:
        methods:
            '-registerAdView:clickableAssetViews:nonclickableAssetViews:':
                #trim_after_first_colon: true
                name: registerAdView
    GADUnifiedNativeAdView: {}
    GADVideoController: # DONE
        methods:
            '-aspectRatio':
                property: true
    GADVideoOptions: {} # DONE

    #added from console for 7.34.0
    GADMuteThisAdReason: {}
    GADNativeMuteThisAdLoaderOptions: {}
    GADRequestConfiguration: {}
    #added from console end

protocols:
    DFPBannerAdLoaderDelegate:
        methods:
            '-adLoader:didReceiveDFPBannerView:':
                #trim_after_first_colon: true
                name: didReceive

    DFPCustomRenderedBannerViewDelegate: # DONE
        methods:
            '-bannerView:didReceiveCustomRenderedAd:':
                name: didReceiveCustomRenderedAd
    DFPCustomRenderedInterstitialDelegate: # DONE
        methods:
            '-interstitial:didReceiveCustomRenderedAd:':
                name: didReceiveCustomRenderedAd
    GADAdLoaderDelegate: # DONE
        methods:
            '-adLoader:didFailToReceiveAdWithError:':
                name: didFailToReceiveAd
    GADAdNetworkExtras: {} # DONE
    GADAdSizeDelegate: # DONE
        methods:
            '-adView:willChangeAdSizeTo:':
                name: willChangeAdSize
    GADAppEventDelegate: # DONE
        methods:
            '-adView:didReceiveAppEvent:withInfo:':
                name: didReceiveBannerAppEvent
            '-interstitial:didReceiveAppEvent:withInfo:':
                name: didReceiveInterstitialAppEvent
    GADAudioVideoManagerDelegate: {}
    GADBannerViewDelegate: # DONE
        methods:
            '-adViewDidReceiveAd:':
                name: didReceiveAd
            '-adView:didFailToReceiveAdWithError:':
                name: didFailToReceiveAd
            '-adViewWillPresentScreen:':
                name: willPresentScreen
            '-adViewWillDismissScreen:':
                name: willDismissScreen
            '-adViewDidDismissScreen:':
                name: didDismissScreen
            '-adViewWillLeaveApplication:':
                name: willLeaveApplication
    GADCustomEventBanner: # DONE
        methods:
            '-requestBannerAd:parameter:label:request:':
                name: requestBannerAd
    GADCustomEventBannerDelegate: # DONE
        methods:
            '-customEventBanner:clickDidOccurInAd:':
                exclude: true # deprecated
            '-customEventBanner:didReceiveAd:':
                name: didReceiveAd
            '-customEventBanner:didFailAd:':
                name: didFail
            '-customEventBannerWasClicked:':
                name: wasClicked
            '-customEventBannerWillPresentModal:':
                name: willPresentModal
            '-customEventBannerWillDismissModal:':
                name: willDismissModal
            '-customEventBannerDidDismissModal:':
                name: didDismissModal
            '-customEventBannerWillLeaveApplication:':
                name: willLeaveApplication
    GADCustomEventInterstitial: # DONE
        methods:
            '-requestInterstitialAdWithParameter:label:request:':
                name: requestInterstitialAd
            '-presentFromRootViewController:':
                name: present
    GADCustomEventInterstitialDelegate: # DONE
        methods:
            '-customEventInterstitial:didReceiveAd:':
                exclude: true # deprecated
            '-customEventInterstitialDidReceiveAd:':
                name: didReceiveAd
            '-customEventInterstitial:didFailAd:':
                name: didFail
            '-customEventInterstitialWasClicked:':
                name: wasClicked
            '-customEventInterstitialWillPresent:':
                name: willPresent
            '-customEventInterstitialWillDismiss:':
                name: willDismiss
            '-customEventInterstitialDidDismiss:':
                name: didDismiss
            '-customEventInterstitialWillLeaveApplication:':
                name: willLeaveApplication
    GADCustomEventNativeAd: # DONE
        methods:
            '-requestNativeAdWithParameter:request:adTypes:options:rootViewController:':
                name: requestNativeAd
                parameters:
                    adTypes:
                        type: List<GADAdLoaderAdType>
                        marshaler: GADAdLoaderAdType.AsListMarshaler
    GADCustomEventNativeAdDelegate: # DONE
        methods:
            '-customEventNativeAd:didReceiveMediatedUnifiedNativeAd:':
                #trim_after_first_colon: true
                name: didReceiveMediatedUnifiedNativeAd
            '-customEventNativeAd:didReceiveMediatedNativeAd:':
                name: didReceiveMediatedNativeAd
            '-customEventNativeAd:didFailToLoadWithError:':
                name: didFailToLoad
    GADDebugOptionsViewControllerDelegate: {}
    GADDefaultInAppPurchaseDelegate: # DONE
        methods:
            '-userDidPayForPurchase:':
                trim_after_first_colon: true
            '-shouldStartPurchaseForProductID:quantity:':
                name: shouldStartPurchase
    GADInAppPurchaseDelegate: # DONE
        methods:
            '-didReceiveInAppPurchase:':
                trim_after_first_colon: true
    GADInterstitialDelegate: # DONE
        methods:
            '-interstitialDidReceiveAd:':
                name: didReceiveAd
            '-interstitial:didFailToReceiveAdWithError:':
                name: didFailToReceiveAd
            '-interstitialWillPresentScreen:':
                name: willPresentScreen
            '-interstitialWillDismissScreen:':
                name: willDismissScreen
            '-interstitialDidDismissScreen:':
                name: didDismissScreen
            '-interstitialWillLeaveApplication:':
                name: willLeaveApplication
            '-interstitialDidFailToPresentScreen:':
                name: didFailToPresentScreen
    GADMAdNetworkAdapter:
        methods:
            '-getNativeAdWithAdTypes:options:':
                #trim_after_first_colon: true
                name: getNativeAd
    GADMAdNetworkConnector:
        methods:
            '-adapter:didFailAd:':
                #trim_after_first_colon: true
                name: didFailAd
            '-adapter:didReceiveAdView:':
                #trim_after_first_colon: true
                name: didReceiveAdView
            '-adapter:didReceiveMediatedNativeAd:':
                #trim_after_first_colon: true
                name: didReceiveMediatedNativeAd
            '-adapter:didReceiveMediatedUnifiedNativeAd:':
                #trim_after_first_colon: true
                name: didReceiveMediatedUnifiedNativeAd
            '-adapter:didReceiveInterstitial:':
                #trim_after_first_colon: true
                name: didReceiveInterstitial
            '-adapter:clickDidOccurInBanner:':
                #trim_after_first_colon: true
                name: clickDidOccurInBanner
            '-adapter:didFailInterstitial:':
                #trim_after_first_colon: true
                name: didFailInterstitial
    GADMediatedNativeAd: # DONE
        methods:
            '-mediatedNativeAdDelegate':
                property: true
            '-extraAssets':
                property: true
    GADMediatedNativeAdDelegate: # DONE
        methods:
            '-mediatedNativeAd:didRenderInView:viewController:':
                name: didRenderInView
            '-mediatedNativeAd:didRenderInView:clickableAssetViews:nonclickableAssetViews:viewController:':
                #trim_after_first_colon: true
                name: didRenderInView
            '-mediatedNativeAdDidRecordImpression:':
                name: didRecordImpression
            '-mediatedNativeAd:didRecordClickOnAssetWithName:view:viewController:':
                name: didRecordClickOnAsset
            '-mediatedNativeAd:didUntrackView:':
                name: didUntrackView
    GADMediatedNativeAppInstallAd: # DONE
        methods:
            '-(headline|body|icon|callToAction|starRating|store|price)':
                property: true
            '-images':
                property: true
                return_type: NSArray<GADNativeAdImage>
    GADMediatedNativeContentAd: # DONE
        methods:
            '-(headline|body|logo|callToAction|advertiser)':
                property: true
            '-images':
                property: true
                return_type: NSArray<GADNativeAdImage>
    GADMediatedUnifiedNativeAd:
        methods:
            '-didRenderInView:clickableAssetViews:nonclickableAssetViews:viewController:':
                #trim_after_first_colon: true
                name: didRenderInView
            '-didRecordClickOnAssetWithName:view:viewController:':
                #trim_after_first_colon: true
                name: didRecordClickOnAsset
    GADMediationAdRequest: {}
    GADMRewardBasedVideoAdNetworkAdapter:
        methods:
            '-initWithRewardBasedVideoAdNetworkConnector:credentials:':
                #trim_after_first_colon: true
                name: init
    GADMRewardBasedVideoAdNetworkConnector:
        methods:
            '-adapter:didFailToSetUpRewardBasedVideoAdWithError:':
                #trim_after_first_colon: true
                name: didFailToSetUpRewardBasedVideoAd
            '-adapter:didRewardUserWithReward:':
                #trim_after_first_colon: true
                name: adidRewardUser
            '-adapter:didFailToLoadRewardBasedVideoAdwithError:':
                #trim_after_first_colon: true
                name: didFailToLoadRewardBasedVideoAd
    GADNativeAdDelegate: # DONE
        methods:
            '-nativeAdWillPresentScreen:':
                name: willPresentScreen
            '-nativeAdWillDismissScreen:':
                name: willDismissScreen
            '-nativeAdDidDismissScreen:':
                name: didDismissScreen
            '-nativeAdWillLeaveApplication:':
                name: willLeaveApplication
    GADNativeAppInstallAdLoaderDelegate: # DONE
        methods:
            '-adLoader:didReceiveNativeAppInstallAd:':
                name: didReceiveNativeAppInstallAd
    GADNativeContentAdLoaderDelegate: # DONE
        methods:
            '-adLoader:didReceiveNativeContentAd:':
                name: didReceiveNativeContentAd
    GADNativeCustomTemplateAdLoaderDelegate: # DONE
        methods:
            '-nativeCustomTemplateIDsForAdLoader:':
                name: getNativeCustomTemplateIDs
                return_type: List<String>
                return_marshaler: NSArray.AsStringListMarshaler
            '-adLoader:didReceiveNativeCustomTemplateAd:':
                name: didReceiveNativeCustomTemplateAd
    GADNativeExpressAdViewDelegate:
        methods:
            '-nativeExpressAdView:didFailToReceiveAdWithError:':
                #trim_after_first_colon: true
                name: didFailToReceiveAd
    GADRewardBasedVideoAdDelegate: # DONE
        methods:
            '-rewardBasedVideoAdDidReceiveAd:':
                name: didReceiveAd
            '-rewardBasedVideoAdDidOpen:':
                name: didOpen
            '-rewardBasedVideoAdDidStartPlaying:':
                name: didStartPlaying
            '-rewardBasedVideoAdDidClose:':
                name: didClose
            '-rewardBasedVideoAdWillLeaveApplication:':
                name: willLeaveApplication
            '-rewardBasedVideoAd:didRewardUserWithReward:':
                name: didRewardUser
            '-rewardBasedVideoAd:didFailToLoadWithError:':
                name: didFailToLoad
    GADUnifiedNativeAdDelegate: {}
    GADUnifiedNativeAdLoaderDelegate:
        methods:
            '-adLoader:didReceiveUnifiedNativeAd:':
                #trim_after_first_colon: true
                name: didReceiveUnifiedNativeAd
    GADUnifiedNativeAdUnconfirmedClickDelegate:
        methods:
            '-nativeAd:didReceiveUnconfirmedClickOnAssetID:':
                #trim_after_first_colon: true
                name: didReceiveUnconfirmedClick
    GADVideoControllerDelegate: # DONE
        methods:
            '-videoControllerDidEndVideoPlayback:':
                name: didEndVideoPlayback

functions:
    # GADAdSize
    GADAdSizeFromCGSize:
        class: GADAdSize
        name: create
    GADAdSize(FullWidth.*)WithHeight:
        class: GADAdSize
        name: 'get#{g[0]}'
    GADAdSizeEqualToSize:
        class: GADAdSize
        name: equalsTo
    CGSizeFromGADAdSize:
        class: GADAdSize
        name: toCGSize
    IsGADAdSizeValid:
        class: GADAdSize
        name: isValid
    GADAdSizeIsFluid:
        class: GADAdSize
        name: isFluid
    NSStringFromGADAdSize:
        class: GADAdSize
        name: toString
        static: true
        visibility: protected
    NSValueFromGADAdSize:
        class: GADAdSize
        name: toValue
        static: true
        visibility: protected
    GADAdSizeFromNSValue:
        class: GADAdSize
        name: fromValue
        visibility: protected

    # Make sure we don't miss any functions if new ones are introduced in a later version. k? is added by RAV
    (k?GAD.*):
        class: GoogleMobileAds
        name: 'Function__#{g[0]}'
    (k?DFP.*):
        class: GoogleMobileAds
        name: 'Function__#{g[0]}'

values:
    kGADErrorDomain:
        class: GADErrorCode
        name: getClassDomain

    # DFPRequest
    kDFP(SimulatorID):
        class: DFPRequest
        name: 'get#{g[0]}'
        type: String

    # GADAdLoader
    kGADAdLoaderAdType(.*):
        enum: GADAdLoaderAdType
        name: '#{g[0]}'
        type: NSString

    # GADAdSize
    kGADAdSize(.*):
        class: GADAdSize
        name: '#{g[0]}'

    # GADRequest
    kGAD(SimulatorID):
        class: GADRequest
        name: 'get#{g[0]}'
        type: String

    # GADNativeContentAdAssetID
    GADNativeContent(.*)Asset:
        enum: GADNativeContentAdAssetID
        name: '#{g[0]}'
        type: NSString

    # GADNativeAppInstallAssetID
    GADNativeAppInstall(.*)Asset:
        enum: GADNativeAppInstallAssetID
        name: '#{g[0]}'
        type: NSString

    # GADUnifiedNativeAssetIdentifier
    GADUnifiedNative(.*)Asset:
        enum: GADUnifiedNativeAssetIdentifier
        name: '#{g[0]}'
        type: NSString
        
    GADCustomEventParametersServer: 

    GADNativeCustomTemplateAdMediaViewKey:

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?GAD.*):
        class: GoogleMobileAds
        name: 'Value__#{g[0]}'
    (k?DFP.*):
        class: GoogleMobileAds
        name: 'Value__#{g[0]}'

constants:

    kGADMAdapterClassNamePrefix:
        class: GADMAdNetworkAdapter
        name: 'GADMAdapterClassNamePrefix'

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?GAD.*):
        class: GoogleMobileAds
        name: 'Constant__#{g[0]}'
    (k?DFP.*):
        class: GoogleMobileAds
        name: 'Constant__#{g[0]}'
